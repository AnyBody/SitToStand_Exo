AnyFolder Robot_External_Forces = 
{
//  AnyReacForce Robot_Foot_GroundReaction_Left = 
//  {
//    AnyKinLinear lin = 
//    {
//      AnyRefFrame& base = Main.Model.EnvironmentModel.GlobalRef;
//      AnyRefFrame& target = Main.Model.EnvironmentModel.TEST_LOWER_EXO.FOOT_LEFT___1;
//      Ref = 0;
//    };
//    AnyKinRotational rot = 
//    {
//      AnyRefFrame& base = Main.Model.EnvironmentModel.GlobalRef;
//      AnyRefFrame& target = Main.Model.EnvironmentModel.TEST_LOWER_EXO.FOOT_LEFT___1;
//      Type = PlanarAngles;
//    };    
//  };
//  
//  AnyReacForce Robot_Foot_GroundReaction_Right = 
//  {
//    AnyKinLinear lin = 
//    {
//      AnyRefFrame& base = Main.Model.EnvironmentModel.GlobalRef;
//      AnyRefFrame& target = Main.Model.EnvironmentModel.TEST_LOWER_EXO.FOOT_RIGHT___1;
//      Ref = 0;
//    };
//    AnyKinRotational rot = 
//    {
//      AnyRefFrame& base = Main.Model.EnvironmentModel.GlobalRef;
//      AnyRefFrame& target = Main.Model.EnvironmentModel.TEST_LOWER_EXO.FOOT_RIGHT___1;
//      Type = PlanarAngles;
//    };    
//  }; 
    ConditionalContactClass  RobotFootSupport_Left_1 
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Left,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___2.ContactPoint1,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };
    
    ConditionalContactClass  RobotFootSupport_Left_2 
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Left,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___2.ContactPoint2,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };
    
    ConditionalContactClass  RobotFootSupport_Left_3 
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Left,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___2.ContactPoint3,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };
    
    ConditionalContactClass  RobotFootSupport_Left_4 
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Left,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___2.ContactPoint4,
    DisplayTriggerVolume = 1,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };      
    
    ConditionalContactClass  RobotFootSupport_Right_1
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Right,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___1.ContactPoint1,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };
    
    ConditionalContactClass  RobotFootSupport_Right_2
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Right,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___1.ContactPoint2,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };
    
    ConditionalContactClass  RobotFootSupport_Right_3
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Right,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___1.ContactPoint3,
    DisplayTriggerVolume = 0,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };   
    
    ConditionalContactClass  RobotFootSupport_Right_4
    (
    BaseObject = Main.Model.EnvironmentModel.GlobalRef.Foot_Contact_Right,
    TargetObject = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___1.ContactPoint4,
    DisplayTriggerVolume = 1,
    DisplayTargetNode = 0
    ) = {
      UserDefinedLimitLow = -0.05;
      UserDefinedLimitHigh = 0.0;
      UserDefinedRadiusLimit = 0.2;
      Strength = 2000;
      StaticFrictionCoefficient = 0.4;
      NormalDirection = Z;
      FrictionDirection1 = X;
      FrictionDirection2 = Y;
    };    
};

AnyFolder Robot_Human_Interactions = 
{  
  CreateAnyGeneralForce6DOF Pelvis_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Trunk.SegmentsLumbar.PelvisSeg,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.PELVIS_PART___1.HipJointCenterCoordSys)= 
  {
    strength_Fx = 1000;
    strength_Fy = 0   ;
    strength_Fz = 1000;
    strength_Mx = 1000   ;
    strength_My = 1000   ;
    strength_Mz = 1000   ;
  };
  
  CreateAnyGeneralForce6DOF Thigh_Left_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Left.Leg.Seg.Thigh,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___2.ForceRefCoordSys1)=
  {
    strength_Fx = 1000;
    strength_Fy = 0   ;
    strength_Fz = 1000;
    strength_Mx = 1000   ;
    strength_My = 1000   ;
    strength_Mz = 1000   ; 
  };  
  
  CreateAnyGeneralForce6DOF Thigh_Right_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Right.Leg.Seg.Thigh,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___1.ForceRefCoordSys1)= 
  {
    strength_Fx = 1000;
    strength_Fy = 0   ;
    strength_Fz = 1000;
    strength_Mx = 1000   ;
    strength_My = 1000   ;
    strength_Mz = 1000   ;   
  };  
  
  CreateAnyGeneralForce6DOF Shank_Left_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Left.Leg.Seg.Shank,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___1.ForceRefCoordSys1)=
  {
    strength_Fx = 1000;
    strength_Fy = 0   ;
    strength_Fz = 1000;
    strength_Mx = 1000   ;
    strength_My = 1000   ;
    strength_Mz = 1000   ;    
  };  
  
  CreateAnyGeneralForce6DOF Shank_Right_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Right.Leg.Seg.Shank,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___2.ForceRefCoordSys1)= 
  {
    strength_Fx = 1000;
    strength_Fy = 0   ;
    strength_Fz = 1000;
    strength_Mx = 1000   ;
    strength_My = 1000   ;
    strength_Mz = 1000   ;    
  };    
  
  CreateAnyGeneralForce6DOF Foot_Left_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Left.Leg.Seg.Foot,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___2.TopCenterPoint)=
  {
    strength_Fx = 1000;
    strength_Fy = 1000;
    strength_Fz = 1000;
    strength_Mx = 1000;
    strength_My = 1000;
    strength_Mz = 1000;     
  };   
  
  CreateAnyGeneralForce6DOF Foot_Right_Forces(
  TargetFrame = Main.HumanModel.BodyModel.Right.Leg.Seg.Foot,
  BaseFrame = Main.Model.EnvironmentModel.EXO_ROBOT.FOOT_PART___1.TopCenterPoint)=
  {
    strength_Fx = 1000;
    strength_Fy = 1000;
    strength_Fz = 1000;
    strength_Mx = 1000;
    strength_My = 1000;
    strength_Mz = 1000;     
  };  
};

AnyFolder Robot_Measures = 
{
  Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___1.EXO_ROBOT_HINGE_HIP_RIGHT = 
  {
    AnyRefNode RotNode = 
    {
      ARel = RotMat(pi, z);
      
//      AnyDrawRefFrame drw = 
//      {
//        RGB = {1, 1, 1};
//      };    
    };
  };
  
  Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___2.EXO_ROBOT_HINGE_KNEE_RIGHT =
  {
    AnyRefNode RotNode = 
    {
      ARel = RotMat(pi, z);
      
//      AnyDrawRefFrame drw = 
//      {
//        RGB = {1, 1, 1};
//      };
    };
  };
  
  Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___1.EXO_ROBOT_HINGE_KNEE_LEFT = 
  {
    AnyRefNode RotNode = 
    {
      ARel = RotMat(pi, z);
      
//      AnyDrawRefFrame drw = 
//      {
//        RGB = {1, 1, 1};
//      };
    };
  };
  
  AnyKinMeasureOrg Hip_Flexion_Right = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___1.EXO_ROBOT_HINGE_HIP_RIGHT.RotNode;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.PELVIS_PART___1.EXO_ROBOT_HINGE_HIP_RIGHT;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };
  
  AnyKinMeasureOrg Hip_Flexion_Left = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.PELVIS_PART___1.EXO_ROBOT_HINGE_HIP_LEFT;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___2.EXO_ROBOT_HINGE_HIP_LEFT;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };  
  
  AnyKinMeasureOrg Knee_Flexion_Right  = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___1.EXO_ROBOT_HINGE_KNEE_RIGHT;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___2.EXO_ROBOT_HINGE_KNEE_RIGHT.RotNode;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };  
  
  AnyKinMeasureOrg Knee_Flexion_Left  = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___1.EXO_ROBOT_HINGE_KNEE_LEFT.RotNode;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.THIGH_PART___2.EXO_ROBOT_HINGE_KNEE_LEFT;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };    
  
  AnyKinMeasureOrg Ankle_Flexion_Right = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___2.EXO_ROBOT_HINGE_ANKLE_FLEXION_RIGHT;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.ANKLE_PART___1.EXO_ROBOT_HINGE_ANKLE_FLEXION_RIGHT;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };
  
  AnyKinMeasureOrg Ankle_Flexion_Left = 
  {
    AnyKinRotational rot = 
    {
      AnyRefFrame& ref0 = Main.Model.EnvironmentModel.EXO_ROBOT.ANKLE_PART___2.EXO_ROBOT_HINGE_ANKLE_FLEXION_LEFT;
      AnyRefFrame& ref1 = Main.Model.EnvironmentModel.EXO_ROBOT.SHANK_PART___1.EXO_ROBOT_HINGE_ANKLE_FLEXION_LEFT;
      Type = RotAxesAngles;
    };
    MeasureOrganizer = {0};
  };
  
};

AnyFolder Robot_Actuators = 
{
  #if ACTUATOR_IDEAL_TORQUE == 1
   AnyReacForce Hip_Right = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Hip_Flexion_Right;
   };
     
   AnyReacForce Hip_Left = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Hip_Flexion_Left;
   };  
   
   AnyReacForce Knee_Right = 
   {
     AnyKinMeasureOrg& ref =Main.Model.ModelEnvironmentConnection.Robot_Measures.Knee_Flexion_Right;
   };
   
   AnyReacForce Knee_Left = 
   {
     AnyKinMeasureOrg& ref =Main.Model.ModelEnvironmentConnection.Robot_Measures.Knee_Flexion_Left;
   };  
   
   AnyReacForce Ankle_Right = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Ankle_Flexion_Right;
   };
   
   AnyReacForce Ankle_Left = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Ankle_Flexion_Left;
   };  
  #endif
  
  #if ACTUATOR_FUNCTION_TORQUE == 1
   AnyForce Hip_Right = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Hip_Flexion_Right;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_HIP * {ref.Pos[0]};
   };
   
   AnyForce Hip_Left = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Hip_Flexion_Left;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_HIP * {ref.Pos[0]};
   };  
   
   AnyForce Knee_Right = 
   {
     AnyKinMeasureOrg& ref =Main.Model.ModelEnvironmentConnection.Robot_Measures.Knee_Flexion_Right;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_KNEE * {ref.Pos[0]};     
   };
   
   AnyForce Knee_Left = 
   {
     AnyKinMeasureOrg& ref =Main.Model.ModelEnvironmentConnection.Robot_Measures.Knee_Flexion_Left;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_KNEE * {ref.Pos[0]};      
   };  
   
   AnyForce Ankle_Right = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Ankle_Flexion_Right;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_ANKLE * {ref.Pos[0]};      
   };
   
   AnyForce Ankle_Left = 
   {
     AnyKinMeasureOrg& ref = Main.Model.ModelEnvironmentConnection.Robot_Measures.Ankle_Flexion_Left;
     
     AnyVar Sign = iffun(gtfun(ref.Vel[0], 0.0), 1.0, -1.0);
     
     AnyFloat VelLimit = 0.1;
     AnyVar VelFactor = iffun(gteqfun(abs(ref.Vel[0]), VelLimit), 1.0, sin(abs(ref.Vel[0])/VelLimit*(pi/2)) );
     
     F = Sign * VelFactor * ACTUATOR_FACTOR_ANKLE * {ref.Pos[0]};       
   };   
  #endif
  
  AnyVar Torque_Hip_Right = Hip_Right.Fout[0];
  AnyVar Torque_Hip_Left = Hip_Left.Fout[0];
  AnyVar Torque_Knee_Right = Knee_Right.Fout[0];
  AnyVar Torque_Knee_Left = Knee_Left.Fout[0];
  AnyVar Torque_Ankle_Right = Ankle_Right.Fout[0];  
  AnyVar Torque_Ankle_Left = Ankle_Left.Fout[0];

  AnyVar Power_Hip_Right = Hip_Right.Fout[0] * Hip_Right.ref.Vel[0];  
  AnyVar Power_Hip_Left = Hip_Left.Fout[0] * Hip_Left.ref.Vel[0];  
  AnyVar Power_Knee_Right = Knee_Right.Fout[0] * Knee_Right.ref.Vel[0];
  AnyVar Power_Knee_Left = Knee_Left.Fout[0] * Knee_Left.ref.Vel[0];  
  AnyVar Power_Ankle_Right= Ankle_Right.Fout[0] * Ankle_Right.ref.Vel[0];  
  AnyVar Power_Ankle_Left = Ankle_Left.Fout[0] * Ankle_Left.ref.Vel[0];  
};